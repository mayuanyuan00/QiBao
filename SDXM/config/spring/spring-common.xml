<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
    <bean class="cn.com.utils.SpringContextHolder"/>

    <!-- 导入类扫描的注解解析器和事务的注解解析器 -->
    <context:component-scan base-package="cn.com">
    	<context:exclude-filter type="annotation" expression="org.springframework.scheduling.annotation.EnableScheduling"/>
    </context:component-scan>
    <!-- 通用配置 -->
    <!-- 线程池配置  Start   author ：常东旭 -->
    <bean id="taskExecutor"
          class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5"/> <!--核心线程数 -->
        <property name="keepAliveSeconds" value="3000"/> <!-- 某线程空闲超过这个时间，就回收该线程 -->
        <property name="maxPoolSize" value="10"/>     <!--最大线程数 -->
        <property name="queueCapacity" value="1000"/>  <!-- 队列大小 -->
        <property name="rejectedExecutionHandler">
            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
            <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
            <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <bean class="java.util.concurrent.ThreadPoolExecutor$DiscardPolicy"/>
        </property>
    </bean>
    <!-- 线程池配置  End   author ：常东旭 -->

    <!-- 注解异步 start author ：常东旭-->
    <!--<task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>-->
    <!--<task:executor id="myExecutor" pool-size="50"/>-->
    <!--<task:scheduler id="myScheduler" pool-size="1000"/>-->
    <!--未使用-->
    <!-- 注解异步 end author ：常东旭-->



    <!-- mvc的注解驱动 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="objectMapper" ref="objectMapper"/>
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/json;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="cn.com.converter.DateInjectConverter"/>
            </list>
        </property>
    </bean>
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!-- 前缀+ viewName +后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- webroot到某一指定的文件夹的路径 -->
        <property name="prefix" value="/WEB-INF/jsps/"/>
        <!-- 视图名称的后缀 -->
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- id="multipartResolver"必须是multipartResolver -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- maxUploadSize:文件上传的最大值以byte为单位,4MB -->
        <property name="maxUploadSize" value="10240000"/>
    </bean>

    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>
</beans>
