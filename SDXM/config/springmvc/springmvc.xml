<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

	<!-- mvc的注解驱动 -->
	<mvc:annotation-driven />
	<!-- 一旦有扫描器的定义mvc:annotation-driven不需要，扫描器已经有了注解驱动的功能 -->
	<context:component-scan base-package="cn.com.controller" />
	<!-- 前缀+ viewName +后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- webroot到某一指定的文件夹的路径 -->
		<property name="prefix" value="/WEB-INF/jsps/"></property>
		<!-- 视图名称的后缀 -->
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- id="multipartResolver"必须是multipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- maxUploadSize:文件上传的最大值以byte为单位 -->
		<property name="maxUploadSize" value="10240000"></property>
		<property name="resolveLazily" value="true"/>
	</bean>
	
	<!-- LUCENE SEARCH CONFIG -->
	<!-- 设置字段内容长度，这里不做限定 -->
	<bean id="MAXFIELDLENGTH2"
		class="org.apache.lucene.index.IndexWriter.MaxFieldLength.UNLIMITED" />
	<!-- set your analyzer, to be used by the IndexWriter and QueryParser ，关于分词器，因为我们主要进行中文搜索，所以要选择好点的中文分词器，我选择了paoding -->
	<bean id="luceneAnalyzer" class="net.paoding.analysis.analyzer.PaodingAnalyzer">
	</bean>
	<!-- set your Lucene directory -->
	<!-- in this case I am pulling the location from a properties file -->
	<!-- also, using the SimpleFSLockFactory ,数据文件存放位置设置 -->
	<bean id="luceneDirectory" class="org.apache.lucene.store.SimpleFSDirectory">
		<constructor-arg>
			<bean class="java.io.File">
				<constructor-arg value="E:\\common\\hahaha" />
			</bean>
		</constructor-arg>
	</bean>
	<!-- now you're ready to define the IndexWriter,这里创建 IndexWriter并引入相关bean -->
	<bean id="indexWriter" class="org.apache.lucene.index.IndexWriter">
		<constructor-arg ref="luceneDirectory" />
		<constructor-arg ref="luceneAnalyzer" />
		<constructor-arg name="create" value="false" />
		<constructor-arg ref="MAXFIELDLENGTH2" />
	</bean>
	<!-- define the IndexSearcher ,这里创建IndexSearcher -->
	<bean id="indexSearcher" class="org.apache.lucene.search.IndexSearcher">
		<constructor-arg ref="luceneDirectory" />
	</bean>
	<!-- 注册定时器 -->  
    <bean id="timer"  
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
        <property name="triggers">  
            <list>  
                <ref bean="timerTaskTrigger" />  
            </list>  
        </property>  
    </bean> 
    <!-- 指定何时触发定时任务 -->  
    <bean id="timerTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail">  
            <ref bean="timerTaskJobDetail" />  
        </property>  
        <property name="cronExpression">  
            <!-- 每3秒钟触发一次 -->  
            <value>0/3 * * * * ?</value>  
        </property>  
    </bean>  
    <!-- 指定定时任务细节 调用哪个类 哪个方法 -->  
    <bean id="timerTaskJobDetail"  
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject">  
            <ref bean="timerTaskInstance" />  
        </property>  
        <property name="targetMethod">  
            <value>doTask</value>  
        </property>  
        <property name="concurrent" value="false" />  
    </bean> 
    <!-- 实例化定时任务类 -->  
    <bean id="timerTaskInstance" class="cn.com.common.TimerTask" />    
</beans>
